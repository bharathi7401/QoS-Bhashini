{
  "meta": {
    "type": "db",
    "canSave": true,
    "canEdit": true,
    "canAdmin": true,
    "canStar": true,
    "canDelete": true,
    "slug": "bhashini-ultimate-dashboard",
    "url": "/d/bhashini-ultimate/bhashini-ultimate-dashboard",
    "expires": "0001-01-01T00:00:00Z",
    "created": "2025-08-26T01:58:16Z",
    "updated": "2025-08-26T01:58:16Z",
    "updatedBy": "admin",
    "createdBy": "admin",
    "version": 1,
    "hasAcl": false,
    "isFolder": false,
    "folderId": 0,
    "folderUid": "",
    "folderTitle": "General",
    "folderUrl": "",
    "provisioned": false,
    "provisionedExternalId": "",
    "annotationsPermissions": {
      "dashboard": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      },
      "organization": {
        "canAdd": true,
        "canEdit": true,
        "canDelete": true
      }
    }
  },
  "dashboard": {
    "id": 8,
    "panels": [
      {
        "fieldConfig": {
          "defaults": {
            "unit": "percent"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 0,
          "y": 0
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"availability\") |> group() |> mean()",
            "refId": "A"
          }
        ],
        "title": "System Status",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 6,
          "y": 0
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> group() |> count()",
            "refId": "A"
          }
        ],
        "title": "Total API Calls",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "none"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 12,
          "y": 0
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> group() |> distinct(column: \"tenant_id\") |> count()",
            "refId": "A"
          }
        ],
        "title": "Active Tenants",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "ms"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 18,
          "y": 0
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"latency\") |> group() |> mean()",
            "refId": "A"
          }
        ],
        "title": "Average Response Time",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "percent"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 0,
          "y": 8
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"error_rate\") |> group() |> mean()",
            "refId": "A"
          }
        ],
        "title": "Overall Error Rate",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "none"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 6,
          "y": 8
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"availability\") |> filter(fn: (r) => r[\"value\"] >= 99.0) |> group() |> count()",
            "refId": "A"
          }
        ],
        "title": "SLA Compliance",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "requests_per_minute"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 12,
          "y": 8
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"throughput\") |> group() |> max()",
            "refId": "A"
          }
        ],
        "title": "Peak Throughput",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "none"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 18,
          "y": 8
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> group() |> distinct(column: \"service_name\") |> count()",
            "refId": "A"
          }
        ],
        "title": "Service Count",
        "type": "stat"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "ms"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 16
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"latency\") |> group(columns: [\"service_name\"]) |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)",
            "refId": "A"
          }
        ],
        "title": "Service Latency Trends",
        "type": "timeseries"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "requests_per_minute"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 16
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"throughput\") |> group(columns: [\"service_name\"]) |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)",
            "refId": "A"
          }
        ],
        "title": "Throughput Patterns",
        "type": "timeseries"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "percent"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 24
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"availability\") |> group(columns: [\"service_name\", \"tenant_id\"]) |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)",
            "refId": "A"
          }
        ],
        "title": "Availability Heatmap",
        "type": "heatmap"
      },
      {
        "fieldConfig": {
          "defaults": {
            "unit": "percent"
          }
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 24
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            },
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> filter(fn: (r) => r[\"metric_type\"] == \"error_rate\") |> group(columns: [\"service_name\"]) |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)",
            "refId": "A"
          }
        ],
        "title": "Error Rate Trends",
        "type": "timeseries"
      },
      {
        "title": "SLA Tier Distribution",
        "type": "piechart",
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"qos_metrics\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] == \"qos_metrics\") |> filter(fn: (r) => r[\"_field\"] == \"value\") |> group(columns: [\"sla_tier\"]) |> count()",
            "datasource": {
              "type": "influxdb",
              "uid": "influxdb-working"
            }
          }
        ],
        "fieldConfig": {
          "defaults": {}
        },
        "gridPos": {
          "h": 8,
          "w": 6,
          "x": 0,
          "y": 32
        }
      }
    ],
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "title": "Bhashini Ultimate Dashboard",
    "uid": "bhashini-ultimate",
    "version": 1
  }
}
