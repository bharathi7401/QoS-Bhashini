version: '3.8'

services:
  influxdb:
    image: influxdb:2.7
    container_name: bhashini-influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=bhashini
      - DOCKER_INFLUXDB_INIT_BUCKET=qos_metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin-token-123
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    networks:
      - bhashini-network

  grafana:
    image: grafana/grafana:10.2.0
    container_name: bhashini-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/provider-dashboards/bhashini-provider-overview.json
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=5s
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_UID=bhashini-provider-overview
      - INFLUXDB_TOKEN=admin-token-123
      - INFLUXDB_ORG=bhashini
      - INFLUXDB_BUCKET=qos_metrics
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_SMTP_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - bhashini-network
    depends_on:
      - influxdb

  nginx:
    image: nginx:alpine
    container_name: bhashini-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./public-dashboard:/usr/share/nginx/html
    networks:
      - bhashini-network
    depends_on:
      - grafana

  data-generator:
    image: python:3.9-slim
    container_name: bhashini-data-generator
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./data-generator:/app
    command: >
      sh -c "pip install influxdb-client requests &&
              python generate_qos_data.py"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=admin-token-123
      - INFLUXDB_ORG=bhashini
      - INFLUXDB_BUCKET=qos_metrics
    networks:
      - bhashini-network
    depends_on:
      - influxdb

volumes:
  influxdb_data:
  influxdb_config:
  grafana_data:

networks:
  bhashini-network:
    driver: bridge
